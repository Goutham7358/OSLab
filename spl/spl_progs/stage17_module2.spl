alias funcNumber R1;
alias counter R9;

if(funcNumber==1) then
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE +3] + 1;
	
	if([SYSTEM_STATUS_TABLE +2] == 0) then
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 4] = WAIT_MEM;
		multipush(R0,R1,R2,R3,R4,R5,R6,R7);
		call MOD_5;
		multipop(R0,R1,R2,R3,R4,R5,R6,R7);
	endif;
	
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE +3] - 1;
	[SYSTEM_STATUS_TABLE +2] = [SYSTEM_STATUS_TABLE +2] - 1;
	
	
	counter = 76;
	alias retValue R0;
	retValue = -1;
	
	while(counter<= 127) do
		if([MEMORY_FREE_LIST + counter] == 0) then
			[MEMORY_FREE_LIST + counter] = 1;
			retValue = counter;
			
			break;
		endif;
		counter = counter + 1;
	endwhile;
	retValue = counter;
	return;
endif;

if(funcNumber==2) then
	alias pNumber R2;
	[MEMORY_FREE_LIST + pNumber] = [MEMORY_FREE_LIST + pNumber] - 1;
	
	if([MEMORY_FREE_LIST + pNumber] == 0) then
		[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
		
		
		counter = 1;
		while(counter<=15) do
			if([PROCESS_TABLE + counter*16 +4] == WAIT_MEM) then
				[PROCESS_TABLE + counter*16 +4] = READY;
			endif;
		counter = counter + 1;
		endwhile;
		
	endif;
	breakpoint;
	return;
endif;

if(funcNumber==4) then
	alias blockNumber R3;
	[DISK_FREE_LIST + blockNumber] = [DISK_FREE_LIST + blockNumber] - 1;
	return;
endif;		

if(funcNumber==5) then
	alias retValue R0;
	alias blockNum R2;
	alias i R10;
	
	alias j R4;
	
	i=0;
	
	while(i<=15) do
		j=2;
		while(j<10) do
			if(([DISK_MAP_TABLE+i*10+j]==blockNum) && ([PAGE_TABLE_BASE+20*i+2*j]!=-1)) then
					retValue=[PAGE_TABLE_BASE+20*i+2*j];
					[MEMORY_FREE_LIST+[PAGE_TABLE_BASE+20*i+2*j]]=[MEMORY_FREE_LIST+[PAGE_TABLE_BASE+20*i+2*j]]+1;
					return;
			endif;
			j=j+1;
		endwhile;
		i=i+1;
	endwhile;
	
	print("NotinMemory");
	alias returnedValue R6;
	
	multipush(R0,R1,R2,R3,R4,R5);
			alias funcNumber R1;
			funcNumber = 1;
			call MOD_2;
			
			returnedValue = retValue;
	multipop(R0,R1,R2,R3,R4,R5);
	
	print("GotAPAGE!");
	
	alias blockNumber R7;
	blockNumber = blockNum;
	multipush(R0,R1,R2,R3,R4,R5,R6,R7);
			alias functionNum R1;
			alias currentPID R2;
			alias pageNum R4;
			alias blockNum R5;
			
			functionNum = 2;
			currentPID = [SYSTEM_STATUS_TABLE +1];
			pageNum = returnedValue;
			blockNum  = blockNumber;
			print("GonnaLoad");
			call MOD_4;
	multipop(R0,R1,R2,R3,R4,R5,R6,R7);	
	print("LoadedIntoMemory");
	
	retValue = returnedValue;
	return;
endif;
