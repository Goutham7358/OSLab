loadi(63,13);
loadi(64,14);

loadi(65,7); //init program from disk 7 and 8
loadi(66,8);

loadi(22,35); //INT10 module from disk to memory
loadi(23,36);

loadi(2, 15); // Exception Handler Routine 
loadi(3, 16);

loadi(4, 17); //timer interrupt routine
loadi(5, 18);

loadi(16,29); //INT7 routine 
loadi(17,30);

loadi(18,31);  // INT 8 routine fork
loadi(19,32);      

PTBR = PAGE_TABLE_BASE + 20;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[PROCESS_TABLE +16 + 11] = 80;
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;

[76*512] = [65 * 512 + 1];

PTBR = PAGE_TABLE_BASE;

breakpoint;

return;
