[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 7;

alias userSP R0;
userSP = SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 - 1;
alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2*(userSP-4)/512];
offset = (userSP-4)%512;
fileDescPhysicalAddr = (physicalPageNum*512) + offset;
alias fileDescriptor R4;
fileDescriptor = [fileDescPhysicalAddr];
if(fileDescriptor!= -1) then
	alias physicalAddrRetVal R5;
	physicalAddrRetVal = ([PTBR + 2*(userSP-1)/512]*512) + ((userSP-1)%512);
	[physicalAddrRetVal] = -1;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 +9] = 0;
else
	multipush(R0,R1,R2,R3,R4,R5);
	alias funcNumber R1;
	alias currentPID R2;
	alias word R3;
	funcNumber = 4;
	currentPID = [SYSTEM_STATUS_TABLE + 1];
	word = [[PTBR + 2*(userSP - 3)/512]*512 + ((userSP - 3)%512)];
	call MOD_4;
	multipop(R0,R1,R2,R3,R4,R5);
	alias physicalAddrRetVal R6;
	physicalAddrRetVal = ([PTBR + 2*(userSP-1)/512]*512) + ((userSP-1)%512);
	[physicalAddrRetVal] = 0;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 +9] = 0;
endif;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 13];

ireturn;
	
